@using CoBySi.Pomodoro.Repository.Identity.Data
@using CoBySi.Pomodoro.Web.Components.Account.Pages
@using Microsoft.AspNetCore.Identity
@implements IDisposable
@inject NavigationManager NavigationManager
@inject UserManager<PomodoroUser> UserManager
@inject SignInManager<PomodoroUser> SignInManager
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Pomodoro</a>
    </div>
</div>
<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class=" nav-link" href="account/manage">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Manage account
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class=" nav-link" href="account/Logout">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Logout
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class=" nav-link" href="account/login">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>
@code {
    private string? currentUrl;
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}